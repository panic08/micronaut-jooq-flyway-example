




plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.4"
    id 'nu.studer.jooq' version '8.0'
    id("io.micronaut.test-resources") version "3.7.4"

}


version = "0.1"
group = "com.example"

def dbDriver = System.getenv('DATABASE_DRIVER') ?: 'org.postgresql.Driver'
def dbUser = System.getenv('DATABASE_USER') ?: 'postgres'
def dbPassword = System.getenv('DATABASE_PASSWORD') ?: '1234'
def dbHost = System.getenv('DATABASE_HOST') ?: 'localhost'
def dbPort = System.getenv('DATABASE_PORT') ?: 5432
def dbName = System.getenv('DATABASE_NAME') ?: 'disa'
def dbUrl = System.getenv('DATABASE_URL') ?: "jdbc:postgresql://$dbHost:$dbPort/$dbName"



repositories {
    mavenCentral()
}


dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-jooq")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-core")

}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}




